# - округление через f-строки
n = 0.57975
print(f'{8 / 11:.2f}')
print(f'{8 / 11:.2}')
print(f'{n:.2}')

# преобразование числа в указанной системе счисления в 10чную
int('125145', 16)

# & - побитовое и (умножение)
print (5 & 3)
# | - побитовое или
print (5 | 3)
# ^ - исключающее
print (5 ^ 3)

# Побитовые сдвиги
print (6 >> 1) # сдвиг вправо - побитовое деление
print (6 << 1) # сдвиг влево - побитовое умножение

#Комплексные числа
n = complex(5, 7)
print(n)
m = 9 - 7j
print(m)

#Строки
# не обязатльно указывать +
print("Hi" " " "People")

"1 3   5    7".split(" ")
"1 3   5    7".split()
"nAmE".title() # Переводит первый символ к заглавной, остальные строчные
"nAmE nAmE nAmE nAmE".title()
"nAmE".upper() #
"nAmE".lower() #
# map
print (list(map(int, ["1", "2", "3"])))

print('gipopotampo'.count("po")) # считает количество элементов
print('gipopotampo'.replace("po", "pa")) # замена
print('gipopotampo'.replace("po", "pa").replace("g", "t")) # можно каскадировать
print('gipopotampo'.index("po")) # возвращает индекс 1го вхождения
print('gipopotampo'.index("po", 6)) # можно указать начальный индекс
print('gipopotampo'.find("po")) # тоже самое, только при ненахождении возвращает -1

# списки
list('gipopotampo') # перевод строки в список поэлементно, включая пробелы
# append - добавление в конец
# .insert(3, True) - добавление элемента по индексу
# .count() считает вхождения элемента
# .index() Индекс элемента
# .pop() вывод и удаление элемента
# .pop(index) вывод и удаление элемента по индексу
# .remove(имя) удаление элемента по имени. Удалится только 1й попавшийся

# вариант распаковки списка без цикла
n = ["a", "b", "c", "d", "e"]
print(*n, sep="\n")

# Кортежи
# Кортеж менять нельзя, но можно менять списки внутри кортежа

# множества
# у них нет индекстов и срезов
# .pop() удаляет 1й(!!!) элемент с выводом
# .remove(значение) - удаление по значению
# .discard(значение) - удаление по значению

# словари
# нет индексации и срезов
# dict.get(ключ) получение значения по ключу (лучше, не выдает ошибку)
# dict[ключ] - получение значения по ключу
# dict.keys() - список всех ключей. выдает списком
# dict.values() - список всех значений. выдает списком
# dict.items() - список ключей и значений. выдает списками

# оператор is
# хранят ли объекты на одну и туже ссылку в памяти - id(элемент)

