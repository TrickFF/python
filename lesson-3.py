# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type()
# для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно,
# в программе.
a = [1, '23', ['one', 2], {1, 2, 5, 7}, 'Hello, World', {'2': 'two', '5': 'five'}, ('a', 'set', 2)]
for i in range(len(a)):
    print(type(a[i]))

############################################################################################

# 2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
ls = []
a = None
while a != 'exit':
    a = input('Введите произвольный элемент списка (введите exit для выхода) - ')
    if a == 'exit':
        break
    ls.append(a)

print(ls)

k = 0
for i in range(int(len(ls) / 2)):
    # меняем элементы списка местами
    ls[k], ls[k + 1] = ls[k + 1], ls[k]
    k += 2

print(ls)

############################################################################################

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

seasons = {
    'зима': [12, 1, 2],
    'весна': [3, 4, 5],
    'лето': [6, 7, 8],
    'осень': [9, 10, 11]
}

month = int(input('Введите номер месяца. Целое число от 1 до 12 - '))
# проверка того, что 1 < month > 12
while month < 1 or month > 12:
    month = int(input('Введите номер месяца. Целое число от 1 до 12 - '))

print(f'Вы ввели {month} месяц')

# вывод сезона
for key, value in seasons.items():
    if month in value:
        print(f'Это {key}')

############################################################################################

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.
a = input('Введите произвольный набор слов/сиволов через пробел: ')
k = 1
b = a.split()
for i in range(a.count(" ")):
    print(f'{k} - {b[i]:.10}')
    k += 1

############################################################################################

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор
# натуральных чисел. У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент
# с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
a = [12, 10, 7, 7, 5, 3, 2, 2]
number = int(input('Введите целое положительное число от 1 - '))

while number < 1:
    number = int(input('Введите целое положительное число от 1 - '))
print(a)
if number in a:
    count = a.count(number)  # считаем количество элементов = number
    id = a.index(number)  # получаем индекс 1го из элементов = number
    a.insert(count + id, number)  # вставляем number последним из одинаковых элементов
else:
    # получаем индекс на который нужно разместить элемент
    for i in enumerate(a):
        if number < i[1]:
            id = i[0] + 1
        else:
            id = i[0]
            break
    a.insert(id, number)

print(a)

############################################################################################

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть
# два элемента — номер товара и словарь с параметрами (характеристиками товара:
# название, цена, количество, единица измерения). Структуру нужно сформировать программно,
# т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ
# — характеристика товара, например название, а значение — список значений-характеристик,
# например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

t = {}
command = ''

while command != 'exit':
    command = input('Введите команду. help - для вывода справки, exit - для выхода - ')
    if command == '1':
        r = ''
        # выход из цикла тоько, если r число и > 1
        while r.isdigit() == False:
            r = input('Введите количество товаров - ')
            if r.isdigit() == False:
                continue
            else:
                r = int(r)
                if r < 1:
                    r = 'false'  # переводим в тип str иначе проверка isdigit выдаст ошибку
                    continue
                else:
                    break
        for i in range(r):
            name = ''
            # название товара не должно быть пустым
            while name == '':
                name = input(f'Введите название {i + 1}го товара из {r}: ')
            price = ''
            # выход из цикла тоько, если price число и >= 0
            while price.isdigit() == False:
                price = input('Введите стоимость товара: ')
                if price.isdigit() == False:
                    continue
                else:
                    price = int(price)
                    if price < 0:
                        price = 'false'  # переводим в тип str иначе проверка isdigit выдаст ошибку
                        continue
                    else:
                        break
            count = ''
            # выход из цикла тоько, если count число и >= 0
            while count.isdigit() == False:
                count = input('Введите количество: ')
                if count.isdigit() == False:
                    continue
                else:
                    count = int(count)
                    if count < 0:
                        count = 'false'  # переводим в тип str иначе проверка isdigit выдаст ошибку
                        continue
                    else:
                        break
            mu = ''
            # ед. измерения товара не должно быть пустым
            while mu == '':
                mu = input('Введите единицы измерения: ')
            # записываем информацию о товаре в словарь
            total = len(t)
            t[total] = (total + 1, {'название': name, 'цена': price, 'количество': count, 'eд': mu})
    elif command == '2':
        if len(t) > 0:
            name_str = []
            price_str = []
            count_str = []
            mu_set = set()

            # формируем строки вывода
            for k, v in t.items():
                name_str.append(v[1]['название'])
                price_str.append(v[1]['цена'])
                count_str.append(v[1]['количество'])
                mu_set.add(v[1]['eд'])

            # выводим информацию
            print('"название":', name_str)
            print('"цена":', price_str)
            print('"количество":', count_str)
            print('"eд":', list(mu_set))
        print(f'Всего товаров - {len(t)}')
    elif command == 'help':
        print(f'1 - ввод товаров\n'
              f'2 - вывод информации о товарах\n'
              f'exit - завершение работы')
    elif command == 'exit':
        break
    else:
        print('Нет такой операции!')


#########################################################################################################

# 6 задание с возможностью удаления товаров из базы

t = {}
command = ''

while command != 'exit':
    command = input('Введите команду. help - для вывода справки, exit - для выхода - ')
    if command == '1':
        r = ''
        # выход из цикла тоько, если r число и > 1
        while r.isdigit() == False:
            r = input('Введите количество товаров - ')
            if r.isdigit() == False:
                continue
            else:
                r = int(r)
                if r < 1:
                    r = 'false'  # переводим в тип str иначе проверка isdigit выдаст ошибку
                    continue
                else:
                    break
        v2 = 0
        for i in range(r):
            # определяем максимальное значение порядкового номера в кортеже,
            # чтобы после удаления элемента не возникло замещений
            for k, v in t.items():
                v2 = v[0]
            name = ''
            # название товара не должно быть пустым
            while name == '':
                name = input(f'Введите название {i + 1}го товара из {r}: ')
            price = ''
            # выход из цикла тоько, если price число и >= 0
            while price.isdigit() == False:
                price = input('Введите стоимость товара: ')
                if price.isdigit() == False:
                    continue
                else:
                    price = int(price)
                    if price < 0:
                        price = 'false'  # переводим в тип str иначе проверка isdigit выдаст ошибку
                        continue
                    else:
                        break
            count = ''
            # выход из цикла тоько, если count число и >= 0
            while count.isdigit() == False:
                count = input('Введите количество: ')
                if count.isdigit() == False:
                    continue
                else:
                    count = int(count)
                    if count < 0:
                        count = 'false'  # переводим в тип str иначе проверка isdigit выдаст ошибку
                        continue
                    else:
                        break
            mu = ''
            # ед. измерения товара не должно быть пустым
            while mu == '':
                mu = input('Введите единицы измерения: ')
            # записываем информацию о товаре в словарь
            t[v2 + 1] = (v2 + 1, {'название': name, 'цена': price, 'количество': count, 'eд': mu})
    elif command == '2':
        if len(t) > 0:
            name_str = []
            price_str = []
            count_str = []
            mu_set = set()

            # формируем строки вывода
            for k, v in t.items():
                name_str.append(v[1]['название'])
                price_str.append(v[1]['цена'])
                count_str.append(v[1]['количество'])
                mu_set.add(v[1]['eд'])

            # выводим информацию
            print('"название":', name_str)
            print('"цена":', price_str)
            print('"количество":', count_str)
            print('"eд":', list(mu_set))
        print(f'Всего товаров в базе - {len(t)}')
    elif command == '3':
        delete_id = input('Введите номер/название удаляемого товара - ')
        # удаление товара но номеру
        if delete_id.isdigit() == True:
            delete_id = int(delete_id)
            if delete_id <= len(t) and delete_id > 0:
                del t[delete_id]
                print(f'Товар с номером {delete_id} удален')
            else:
                print('Нет такого товара')
        # удаление товара по названию
        elif delete_id.isdigit() == False:
            d = 0
            for k, v in t.items():
                if delete_id in v[1]['название']:
                    del t[k]
                    d = 1
                    print(f'Товар {delete_id} удален')
                    break
            if d == 0:
                print('Нет такого товара')
    elif command == 'help':
        print(f'1 - ввод товаров\n'
              f'2 - вывод информации о товарах\n'
              f'3 - удаление товара\n'
              f'exit - завершение работы')
    elif command == 'exit':
        break
    else:
        print('Нет такой операции!')

